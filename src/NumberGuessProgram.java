
// basic program where user has to guess a number between 1 and 1000
// lots of room for extension of the code, however the basics are here

import java.awt.*;
import javax.swing.*;
import java.awt.event.*;


public class NumberGuessProgram extends JFrame implements ActionListener{
    private JButton guess_button; // number field
    private JTextField number_field; // text field
    private JLabel message; // show a message
    private int guess = 0; // guess number of user
    private double random_number = 0; // random number generated by program


    public NumberGuessProgram() {
        setLayout(new FlowLayout());
        setTitle("Guess a number"); // title on top bar

        JPanel panel = new JPanel();
        guess_button = new JButton("Guess"); // set guess button
        add(guess_button);
        message = new JLabel("Enter a number between 1 and 1000"); // set message for user
        add(message);
        add(panel);

        number_field = new JTextField(10);
        panel.add(number_field);

        guess_button.addActionListener(this);
        number_field.addActionListener(this);

        random_number = (int)(Math.random()*((1000-1)+1))+1; // create random number between 1 and 1000
        System.out.println("The random number is: " + random_number);
    }


    public static void main(String[] args) {
        NumberGuess numberguess = new NumberGuess();
        numberguess.setSize(300, 200);
        numberguess.setVisible(true);
        numberguess.setDefaultCloseOperation(EXIT_ON_CLOSE);
    }


    @Override
    public void actionPerformed(ActionEvent e) { // here the magic is happening, input of user compared to random number
        guess = Integer.parseInt(number_field.getText());

        if (guess == random_number) { // if numbers of user equal to random, return correct
            message.setText("Correct");
            guess_button.setBackground(Color.green);
        } else if (guess != random_number) { // else, return false
            message.setText("False");
            guess_button.setBackground(Color.red);
        }
    }
}
